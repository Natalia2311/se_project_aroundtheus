!function(){"use strict";var e=class{constructor(e,t,s,r,i){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s,this.isLiked=e.isLiked,this._id=e._id,this._handleDeleteButton=r,this._handleCardLike=i}setLikeStatus(e){this.isLiked=e,this._renderLikes()}_renderLikes(){this.isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleCardLike(this)})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteButton(this)})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick(this._link,this._name,this._id)}))}handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_getElement(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getElement(),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._cardTitleEl.textContent=this._name,this._renderLikes(),this._setEventListeners(),this._cardElement}},t=class{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach(this._renderer)}addItem(e){this._container.prepend(e)}},s=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_hasInvalidInput(e){return!this._inputEls.every((e=>e.validity.valid))}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this.toggleButtonState(),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}toggleButtonState(){this._hasInvalidInput(this._inputEls)?this._disableButton():this._enableButton()}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._inputEls.forEach((e=>{this._hideInputError(e)})),this.toggleButtonState()}};const r={inputSelector:".modal__form-input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__form-input_type_error",errorClass:"modal__error_visible"},i=(document.querySelector("#add-card-modal"),document.querySelector(".cards__list"),document.querySelector("#profile-title-input")),n=document.querySelector("#profile-description-input"),o=(document.forms["profile-form"],document.querySelector("#profile__edit-button")),a=document.querySelector(".profile__add-button"),l=document.querySelector("#preview-card-modal").querySelector("#modal__container-preview");l.querySelector(".modal__preview-image"),l.querySelector(".modal__preview-heading"),document.querySelector("#profile-name-input"),document.querySelector("#profile-url-input"),document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-edit-modal"),document.querySelector("#delete-modal"),document.querySelector("#profile-avatar-modal");class d{constructor(e){this._popupElement=document.querySelector(e)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscape)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscape)}_handleEscape=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target===this._popupElement||e.target.classList.contains("modal__close"))&&this.close()}))}}var c=class extends d{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputList=this._popupForm.querySelectorAll(".modal__form-input"),this._submitButton=this._popupForm.querySelector(".modal__button"),this._submitButtonText=this._submitButton.textContent}close(){this._popupForm.reset(),super.close()}setLoading(e){this._submitButton.textContent=e?"Saving ...":this._submitButtonText}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}};const u=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponce(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t){return fetch(e,t).then((e=>this._checkResponce(e)))}getInitialCards(){return this._request(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers})}getNewCard(e){let{title:t,url:s}=e;return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})})}getUserInfo(){return this._request(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers})}updateUserInfo(e){let{title:t,description:s}=e;return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})})}updateAvatar(e){return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}deleteCard(e){return this._request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}updateLike(e){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers})}removeLike(e){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"260f3e4b-e160-43cd-8335-e153b3805f81","Content-Type":"application/json"}});let _;function h(e){return e.isLiked?u.removeLike(e._id).then((()=>{e.setLikeStatus(!1)})).catch((e=>{console.error(e)})):u.updateLike(e._id).then((()=>{e.setLikeStatus(!0)})).catch((e=>{console.error(e)}))}u.getInitialCards().then((e=>{_=new t({items:e,renderer:e=>{const t=y(e);_.addItem(t)}},".cards__list"),_.renderItems()})).catch((e=>{console.log(e)})),u.getUserInfo().then((e=>{console.log(e),b.setUserInfo({name:e.name,about:e.about}),b.setUserAvatar(e.avatar)})).catch((e=>{console.error(e)}));const m=new c("#add-card-modal",(function(e){m.setLoading(!0,"Saving ..."),u.getNewCard(e).then((e=>{const t=y(e);_.addItem(t),m.close()})).catch((e=>{console.log(e)})).finally((()=>{m.setLoading(!1)}))}));m.setEventListeners();const p=new s(r,document.forms["card-form"]);p.enableValidation();const v=new c("#avatar-modal",(function(e){v.setLoading(!0,"Saving ..."),u.updateAvatar(e.url).then((t=>{b.setUserAvatar(e.url),v.close()})).catch(console.error).finally((()=>{v.setLoading(!1)}))}));v.setEventListeners();const E=new s(r,document.forms["avatar-form"]);E.enableValidation();const f=new c("#profile-edit-modal",(function(e){let{title:t,description:s}=e;f.setLoading(!0,"Saving ..."),u.updateUserInfo({title:t,description:s}).then((e=>{b.setUserInfo(e),f.close()})).catch((e=>{console.log(e)})).finally((()=>{f.setLoading(!1)}))}));f.setEventListeners();const S=new s(r,document.forms["profile-form"]);S.enableValidation();const b=new class{constructor(e,t,s){this._profileTitle=document.querySelector(e),this._profileDescription=document.querySelector(t),this._avatar=document.querySelector(s)}getUserInfo(){return{title:this._profileTitle.textContent,description:this._profileDescription.textContent,avatar:this._avatar}}setUserInfo(e){let{name:t,about:s}=e;this._profileTitle.textContent=t,this._profileDescription.textContent=s}setUserAvatar(e){this._avatar.src=e}}(".profile__title",".profile__description",".profile__image"),L=new class extends d{constructor(e){super(e),this._previewImageEl=document.querySelector(".modal__preview-image"),this._previewHeadingEl=document.querySelector(".modal__preview-heading")}open(e,t){console.log(2),this._previewImageEl.src=e,this._previewImageEl.alt=t,this._previewHeadingEl.textContent=t,super.open()}}("#preview-card-modal");function g(e,t){L.open(e,t)}function y(t){return new e(t,"#card-template",g,k,h).getView()}L.setEventListeners();const q=new class extends d{constructor(e){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._popupForm.querySelector(".modal__button")}setSubmitAction(e){this._handleFormSubmit=e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()}))}}("#delete-modal");function k(e){q.open(),q.setSubmitAction((()=>{u.deleteCard(e._id).then((()=>{q.close(),e.handleDeleteCard()})).catch((e=>{console.log(e)}))}))}q.setEventListeners(),document.querySelector(".profile__icon").addEventListener("click",(()=>{v.open(),E.resetValidation()})),o.addEventListener("click",(()=>{S.resetValidation();const e=b.getUserInfo();i.value=e.title,n.value=e.description,f.open()})),a.addEventListener("click",(()=>{m.open(),p.resetValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,